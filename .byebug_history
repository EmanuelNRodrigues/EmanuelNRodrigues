c
q!
user
User.first
destroy_request
user_id
project_id
params
Project.first
Project.count
q!
@project.attributes.except('created_at', 'updated_at')
@project.attributes
@project
@project.to_h
@project.hash
@project.except(:updated_at)
@project
c
q!
@project
n
@project
q!
@project
c
q!
response.body
c
q!
user.attributes
q!
params
permitted_params
@project
c
q!
params
permitted_params
c
permited_params
@project
n
@project
c
@project
permited_params
@project.update!(permited_params)
@project
permited_params
@project
@project.validate
    @project.update(permited_params)
@project
c
q
params
URI.get
URI
url
c!
q!
c
user.id
user
user_id
user
User.last
User.count
c
Project.all
Project.first
c
    before { put user_project_path}
user_projects_path(user.id)
user_projects_path
user_project_path
    let(:user) { create(:user) }
user
user_projects_path(user.id)
user_projects_path(@user.id)
user_projects_path
user_project_path
q!
params.require :user_id
params.permit(%i[id name start_date end_date])
permited_params
q!
params.require(:user_id)
params.require(:user)
params.require(user)
params.require(user_id)
permited_params
q!
attributes_for(:project)
stub(:project)
stub
c
q!
user_projects_path(1)
user_projects_path
users_projects_path
users_path
user_project_path
user_path
c
Project.select(%w[id name start_date end_date])
                        .where(user_id: params.require(:user_id))
Project
params.require(:user_id)
params
q!
User.find(698).role
User.find(698)
params
User.find(2)
User.find(1)
User
User.find(params.require(:user_id)).role
current_user
Project.where(user_id: params.require(:user_id)).count
Project.where(user_id: params.require(:user_id))
Project.select(%w[id name start_date end_date])
Project.select(%w[id name start_date end_date]).count
Project.select(%w[id name start_date end_date].count
Project.where(user_id: params.require(:user_id))
Project.select(%w[id name start_date end_date]
Project.includes(:user).select(%w[id name start_date end_date]
Project.includes(:user)
Project
    projects = Project.include(:user).select(%w[id name start_date end_date])
q!
c
q!
q1
q!
c
Project.all.count
Project.all
q!
response.body
c
user_projects_path
c
user_projects_path(1)
user_projects_path
q!
c
user_projects_path(1)
user_projects_path
user_projects_url
user_projects_path
users_path
q!
get user_projects_path
get user_projects_url
user_projects_url
c
user_projects_path
user_path
q!
user_projects_path
user_projects
get user_projects_path
q!
user_projects_path
q!
user_path
user_projects_path
q!
user_projects_path
c
get user_projects_path
user_projects_path
users_path
users
projects_path
projects
projects_url
new_projects_url
users_projects_url
users_project_url
user_project_url
user_projects_url
q!
get users_path
q!
get '/index'
endpoint: users_path
get :index, endpoint: users_path
get :index, url: users_path
get :index
get 'test.host/users'
c!
c
users_path
q!
get :index
get users_path
users_path
q!
users_path
q!
post :index
post :index, header: users_path
post :index, headers: users_path
post :index
UsersController.index
UsersController
get '/users'
get users_path
users_path
q!
projects_path
project_path
users_path
user_path
users_path
user_id_path
users_id_path
users_path
q!
rails routes
rails routes | grep users
user_path
users_path
users_[ath
users_index_url
users_index_path
users_path
get :index, endpoint: index_api
get :index
c
User.count
User.count]
c
User.count
User.destroy(params.required(:id))
User.count
User
q!
params.required(:id)
q!
User.destroy()
User.destroy(@user)
@user
@user.destroy
@user.destroy!
@user
n
@user
q!
c
q!
JSON(response.body).except('updated_at')
JSON(response.body).except('updated_by')
